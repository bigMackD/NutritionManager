// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NutritionManager.Data.Services;

namespace NutritionManager.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181120101521_SecondMigration")]
    partial class SecondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NutritionManager.Data.Entities.Meal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long?>("ProductId");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("NutritionManager.Data.Entities.NutritionValues", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountOfCarbs");

                    b.Property<int>("AmountOfFats");

                    b.Property<int>("AmountOfProteins");

                    b.Property<int>("Calories");

                    b.HasKey("Id");

                    b.ToTable("NutritionValues");
                });

            modelBuilder.Entity("NutritionManager.Data.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long>("NutritionValueId");

                    b.HasKey("Id");

                    b.HasIndex("NutritionValueId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("NutritionManager.Data.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConsumedCalories");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<int>("Height");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int>("RequiedCalories");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NutritionManager.Data.Entities.Meal", b =>
                {
                    b.HasOne("NutritionManager.Data.Entities.Product")
                        .WithMany("Meals")
                        .HasForeignKey("ProductId");

                    b.HasOne("NutritionManager.Data.Entities.User")
                        .WithMany("MealsConsumed")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("NutritionManager.Data.Entities.Product", b =>
                {
                    b.HasOne("NutritionManager.Data.Entities.NutritionValues", "NutritionValue")
                        .WithMany()
                        .HasForeignKey("NutritionValueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
